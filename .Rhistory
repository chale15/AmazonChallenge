hist(df$`Q1 Score`, main = "Question 1 Score", xlab = "Score (Out of 5)", ylab = "Frequency", col = "skyblue", breaks = 10)
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
hist(df$`Q1 Score`, main = "Question 1 Score", xlab = "Score (Out of 5)", ylab = "Frequency", col = "skyblue", breaks = 10)
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
ggplot(df, aes(x = `Q2 Score`)) +
annotate(geom = 'Question 3 Not Yet Graded') +
labs(title = "Question 3",
x = "Score",
y = "Frequency") +
theme_minimal()
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
q2 <- ggplot(df, aes(x = `Q2 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 2",
x = "Score",
y = "Frequency") +
theme_minimal()
q3 <- ggplot(df) +
annotate(geom = 'Question 3 Not Yet Graded') +
labs(title = "Question 3",
x = "Score",
y = "Frequency") +
theme_minimal()
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
q2 <- ggplot(df, aes(x = `Q2 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 2",
x = "Score",
y = "Frequency") +
theme_minimal()
q4 <- ggplot(df, aes(x = `Q4 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 4",
x = "Score",
y = "Frequency") +
theme_minimal()
q5 <- ggplot(df, aes(x = `Q5 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 5",
x = "Score",
y = "Frequency") +
theme_minimal()
q6 <- ggplot(df, aes(x = `Q6 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 6",
x = "Score",
y = "Frequency") +
theme_minimal()
q7 <- ggplot(df, aes(x = `Q7 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 7",
x = "Score",
y = "Frequency") +
theme_minimal()
q8 <- ggplot(df, aes(x = `Q8 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 8",
x = "Score",
y = "Frequency") +
theme_minimal()
(q1 + q2 + q3 + q4)/(q5 + q6 + q7 + q8)
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
q2 <- ggplot(df, aes(x = `Q2 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 2",
x = "Score",
y = "Frequency") +
theme_minimal()
q3 <- ggplot() +
geom_histogram(aes(x = Score), data = data.frame(Score = numeric(0)),
binwidth = 1, fill = "skyblue", color = "white") +
labs(title = "Question 3",
x = "Score",
y = "Frequency") +
theme_minimal()
q4 <- ggplot(df, aes(x = `Q4 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 4",
x = "Score",
y = "Frequency") +
theme_minimal()
q5 <- ggplot(df, aes(x = `Q5 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 5",
x = "Score",
y = "Frequency") +
theme_minimal()
q6 <- ggplot(df, aes(x = `Q6 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 6",
x = "Score",
y = "Frequency") +
theme_minimal()
q7 <- ggplot(df, aes(x = `Q7 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 7",
x = "Score",
y = "Frequency") +
theme_minimal()
q8 <- ggplot(df, aes(x = `Q8 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 8",
x = "Score",
y = "Frequency") +
theme_minimal()
(q1 + q2 + q3 + q4)/(q5 + q6 + q7 + q8)
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
q2 <- ggplot(df, aes(x = `Q2 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 2",
x = "Score",
y = "Frequency") +
theme_minimal()
q3 <- ggplot() +
geom_histogram(aes(x = Score), data = data.frame(Score = numeric(0)),
binwidth = 1, fill = "skyblue", color = "white") +
labs(title = "Question 3",
x = "Score",
y = "Frequency") +
theme_minimal()
q4 <- ggplot(df, aes(x = `Q4 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 4",
x = "Score",
y = "Frequency") +
theme_minimal()
q5 <- ggplot(df, aes(x = `Q5 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 5",
x = "Score",
y = "Frequency") +
theme_minimal()
q6 <- ggplot(df, aes(x = `Q6 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 6",
x = "Score",
y = "Frequency") +
theme_minimal()
q7 <- ggplot(df, aes(x = `Q7 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 7",
x = "Score",
y = "Frequency") +
theme_minimal()
q8 <- ggplot(df, aes(x = `Q8 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 8",
x = "Score",
y = "Frequency") +
theme_minimal()
(q1 + q2 )/ (q3 + q4)/(q5 + q6 )/( q7 + q8)
q1 <- ggplot(df, aes(x = `Q1 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 1",
x = "Score",
y = "Frequency") +
theme_minimal()
q2 <- ggplot(df, aes(x = `Q2 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 2",
x = "Score",
y = "Frequency") +
theme_minimal()
q3 <- ggplot() +
geom_histogram(aes(x = Score), data = data.frame(Score = numeric(0)),
binwidth = 1, fill = "skyblue", color = "white") +
labs(title = "Question 3",
x = "Score",
y = "Frequency") +
theme_minimal()
q4 <- ggplot(df, aes(x = `Q4 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 4",
x = "Score",
y = "Frequency") +
theme_minimal()
q5 <- ggplot(df, aes(x = `Q5 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 5",
x = "Score",
y = "Frequency") +
theme_minimal()
q6 <- ggplot(df, aes(x = `Q6 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 6",
x = "Score",
y = "Frequency") +
theme_minimal()
q7 <- ggplot(df, aes(x = `Q7 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 7",
x = "Score",
y = "Frequency") +
theme_minimal()
q8 <- ggplot(df, aes(x = `Q8 Score`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Question 8",
x = "Score",
y = "Frequency") +
theme_minimal()
q1
summary(df$`Q1 Score`)
q1
df$`Q1 Score`
library(knitr)
library(broom)
library(patchwork)
df <- read_csv('./midterm.csv')
df <- df %>% select(-`Q3 Score`) %>%
mutate(Took = `Took Test`) %>%
filter(Took == 1)
q1
count(df$`Q1 Score`)
q1
about(df$`Q1 Score`)
q1
summary(df$`Q1 Score`)
py -m pip install jupyter
View(df)
summary(df1$Score)
summary(df1$Score/35)
summary(df1$Score)
summary(df1$Score/35)[1]
min <- c(min(df1$Score), min(df1$Score/35))
quart1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
quart1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
med <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
men <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
quart3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
quart1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
med <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
men <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
quart3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- tibble(min, quart1, med, men, quart3, max)
View(sum_df)
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- tibble(Min, Q1, Median, Mean, Q3, Max)
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- tibble(Min, Q1, Median, Mean, Q3, Max)
sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.matrix(tibble(Min, Q1, Median, Mean, Q3, Max))
View(sum_df)
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.matrix(tibble(Min, Q1, Median, Mean, Q3, Max))
print(sum_df)
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.matrix(tibble(Min, Q1, Median, Mean, Q3, Max))
print(sum_df[1,])
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- table(tibble(Min, Q1, Median, Mean, Q3, Max))
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- table(tibble(Min, Q1, Median, Mean, Q3, Max))
sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- table(Min, Q1, Median, Mean, Q3, Max)
sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- table1(Min, Q1, Median, Mean, Q3, Max)
library(tidyverse)
library(knitr)
library(table1)
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- table(matrix(Min, Q1, Median, Mean, Q3, Max))
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- table(as.matrix(tibble(Min, Q1, Median, Mean, Q3, Max)))
sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(Min, Q1, Median, Mean, Q3, Max)
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max))
sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max))
sum_df!
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max))
sum_df&
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max))
&sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max))
!sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max))
sum_df
Min <- c(summary(df1$Score)[1], summary(df1$Score/35)[1])
Q1 <- c(summary(df1$Score)[2], summary(df1$Score/35)[2])
Median <- c(summary(df1$Score)[3], summary(df1$Score/35)[3])
Mean <- c(summary(df1$Score)[4], summary(df1$Score/35)[4])
Q3 <- c(summary(df1$Score)[5], summary(df1$Score/35)[5])
Max <- c(summary(df1$Score)[6], summary(df1$Score/35)[6])
sum_df <- as.data.frame(tibble(Min, Q1, Median, Mean, Q3, Max),row.names = FALSE)
sum_df
data_w <- c(12,9,10,8,9,4,10,15,3,5,11,8,9,4,2,7,9,5,4,2,3,12,10,2,9,8,13,9,7,6,6,2,2,6,8)
data_m <- c(2,3,0,4,1,1,1,2,2,2,0,3,2)
sum(data_w)
249+8
length(data_w)+1.5
sum(data_m)+8
length(data_m)+1.5
data_w <- c(12,9,10,8,9,4,10,15,3,5,11,8,9,4,2,7,9,5,4,2,3,12,10,2,9,8,13,9,7,6,6,2,2,6,8)
data_m <- c(2,3,0,4,1,1,1,2,2,2,0,3,2)
post_w <- c(sum(data_w)+8, length(data_w)+1.5)
post_m <- c(sum(data_m)+8, length(data_m)+1.5)
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(tidyverse)
library(ggplot2)
x <- seq(0, 0.15, by = 0.001)
df_beta_post <- data.frame(
x = x,
male = dbeta(x, post_male[1], post_male[2]),
female = dbeta(x, post_female[1], post_female[2]))
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F])), cex.axis=cex.plots, cex.lab=cex.plots, lwd=2)
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F])),
abline(v=0, lty=2)
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F]))
abline(v=0, lty=2)
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F])),
abline(v=0, lty=2))
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),color = 'blue',
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F])),
abline(v=0, lty=2))
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),fill = 'blue',
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F])),
abline(v=0, lty=2))
draws_m <- rgamma(10000, post_m[1], post_m[2])
draws_f <- rgamma(10000, post_w[1], post_w[2])
diff <- draws_f - draws_m
plot(density(diff),
xlab=expression(lambda[W] - lambda[M]),
ylab="density",
main=expression(paste("Posterior Distribution of ", lambda[W]-lambda[F])),
abline(v=0, lty=2))
mean_diff <- mean(diff)
data <- c(3,3,7,1,4,6,6,7,3,1,5,5,5,3,3,0,3,1,2,2)
prior_params <- c(0.5, 0.5) #Alpha and Beta for the Prior Gamma Distribution
post_params <- c(prior_params[1]+sum(data), prior_params[2]+length(data)) #Update Prior
post_lambda <- rgamma(10000, post_params[1], post_params[2])
post_pred <- rpois(10000, post_lambda)
mean(post_pred>=4)
post_params[1]/post_params[2]
#gamma.liberty.p*(phi.liberty.p+1)/(phi.liberty.p^2)
#pnbinom(99, gamma.liberty.p, phi.liberty.p/(phi.liberty.p+1), lower.tail=F)
#qnbinom(c(.025, .975), gamma.liberty.p, phi.liberty.p/(phi.liberty.p+1))
post_lambda <- rgamma(10000, post_params[1], post_params[2])
post_pred <- rpois(10000, post_lambda)
mean(post_pred>=4)
1-pgamma(4, post_params[1], post_params[2])
#gamma.liberty.p*(phi.liberty.p+1)/(phi.liberty.p^2)
#pnbinom(99, gamma.liberty.p, phi.liberty.p/(phi.liberty.p+1), lower.tail=F)
#qnbinom(c(.025, .975), gamma.liberty.p, phi.liberty.p/(phi.liberty.p+1))
